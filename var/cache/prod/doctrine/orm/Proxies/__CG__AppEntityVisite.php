<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Visite extends \App\Entity\Visite implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'datePlanifie', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'dateRealise', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'dateRapporte', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'dateAtteste', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'planifie', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'realise', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'rapporte', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'atteste', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'conclusion', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'commentaire', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'commentaire2', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'detailVerification', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'dossier', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'rapport', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'motifRejetRapport', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'mesurePriseTerre', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'barrette', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'localNV', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'rejetRapport', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'signatures', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'created_at', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'created_by', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'updated_at', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'updated_by'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'datePlanifie', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'dateRealise', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'dateRapporte', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'dateAtteste', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'planifie', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'realise', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'rapporte', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'atteste', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'conclusion', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'commentaire', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'commentaire2', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'detailVerification', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'dossier', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'rapport', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'motifRejetRapport', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'mesurePriseTerre', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'barrette', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'localNV', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'rejetRapport', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'signatures', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'created_at', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'created_by', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'updated_at', '' . "\0" . 'App\\Entity\\Visite' . "\0" . 'updated_by'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Visite $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getDatePlanifie(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatePlanifie', []);

        return parent::getDatePlanifie();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatePlanifie(\DateTimeInterface $datePlanifie): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatePlanifie', [$datePlanifie]);

        return parent::setDatePlanifie($datePlanifie);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateRapporte(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateRapporte', []);

        return parent::getDateRapporte();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateRapporte(?\DateTimeInterface $dateRapporte): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateRapporte', [$dateRapporte]);

        return parent::setDateRapporte($dateRapporte);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAtteste(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAtteste', []);

        return parent::getDateAtteste();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAtteste(\DateTimeInterface $dateAtteste): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAtteste', [$dateAtteste]);

        return parent::setDateAtteste($dateAtteste);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateRealise(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateRealise', []);

        return parent::getDateRealise();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateRealise(\DateTimeInterface $dateRealise): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateRealise', [$dateRealise]);

        return parent::setDateRealise($dateRealise);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat(string $etat): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetailVerification(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetailVerification', []);

        return parent::getDetailVerification();
    }

    /**
     * {@inheritDoc}
     */
    public function addDetailVerification(\App\Entity\DetailVerification $detailVerification): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDetailVerification', [$detailVerification]);

        return parent::addDetailVerification($detailVerification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDetailVerification(\App\Entity\DetailVerification $detailVerification): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDetailVerification', [$detailVerification]);

        return parent::removeDetailVerification($detailVerification);
    }

    /**
     * {@inheritDoc}
     */
    public function getDossier(): ?\App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDossier', []);

        return parent::getDossier();
    }

    /**
     * {@inheritDoc}
     */
    public function setDossier(?\App\Entity\Dossier $dossier): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDossier', [$dossier]);

        return parent::setDossier($dossier);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapport(): ?\App\Entity\Rapport
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapport', []);

        return parent::getRapport();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapport(?\App\Entity\Rapport $rapport): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapport', [$rapport]);

        return parent::setRapport($rapport);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentaire(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentaire', []);

        return parent::getCommentaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentaire(?string $commentaire): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentaire', [$commentaire]);

        return parent::setCommentaire($commentaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentaire2(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentaire2', []);

        return parent::getCommentaire2();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentaire2(?string $commentaire2): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentaire2', [$commentaire2]);

        return parent::setCommentaire2($commentaire2);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlanifie(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlanifie', []);

        return parent::getPlanifie();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlanifie(bool $planifie): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlanifie', [$planifie]);

        return parent::setPlanifie($planifie);
    }

    /**
     * {@inheritDoc}
     */
    public function getConclusion(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConclusion', []);

        return parent::getConclusion();
    }

    /**
     * {@inheritDoc}
     */
    public function setConclusion(bool $conclusion): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConclusion', [$conclusion]);

        return parent::setConclusion($conclusion);
    }

    /**
     * {@inheritDoc}
     */
    public function getRealise(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRealise', []);

        return parent::getRealise();
    }

    /**
     * {@inheritDoc}
     */
    public function setRealise(bool $realise): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRealise', [$realise]);

        return parent::setRealise($realise);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapporte(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapporte', []);

        return parent::getRapporte();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapporte(bool $rapporte): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapporte', [$rapporte]);

        return parent::setRapporte($rapporte);
    }

    /**
     * {@inheritDoc}
     */
    public function getAtteste(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAtteste', []);

        return parent::getAtteste();
    }

    /**
     * {@inheritDoc}
     */
    public function setAtteste(bool $atteste): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAtteste', [$atteste]);

        return parent::setAtteste($atteste);
    }

    /**
     * {@inheritDoc}
     */
    public function getRejetRapport(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRejetRapport', []);

        return parent::getRejetRapport();
    }

    /**
     * {@inheritDoc}
     */
    public function setRejetRapport(bool $rejetRapport): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRejetRapport', [$rejetRapport]);

        return parent::setRejetRapport($rejetRapport);
    }

    /**
     * {@inheritDoc}
     */
    public function getMotifRejetRapport(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMotifRejetRapport', []);

        return parent::getMotifRejetRapport();
    }

    /**
     * {@inheritDoc}
     */
    public function setMotifRejetRapport(?string $motifRejetRapport): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMotifRejetRapport', [$motifRejetRapport]);

        return parent::setMotifRejetRapport($motifRejetRapport);
    }

    /**
     * {@inheritDoc}
     */
    public function getMesurePriseTerre(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMesurePriseTerre', []);

        return parent::getMesurePriseTerre();
    }

    /**
     * {@inheritDoc}
     */
    public function setMesurePriseTerre(?string $mesurePriseTerre): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMesurePriseTerre', [$mesurePriseTerre]);

        return parent::setMesurePriseTerre($mesurePriseTerre);
    }

    /**
     * {@inheritDoc}
     */
    public function getBarrette(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBarrette', []);

        return parent::getBarrette();
    }

    /**
     * {@inheritDoc}
     */
    public function setBarrette(?string $barrette): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBarrette', [$barrette]);

        return parent::setBarrette($barrette);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocalNV(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocalNV', []);

        return parent::getLocalNV();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocalNV(?string $localNV): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocalNV', [$localNV]);

        return parent::setLocalNV($localNV);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignatures(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignatures', []);

        return parent::getSignatures();
    }

    /**
     * {@inheritDoc}
     */
    public function addSignature(\App\Entity\Signature $signature): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSignature', [$signature]);

        return parent::addSignature($signature);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSignature(\App\Entity\Signature $signature): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSignature', [$signature]);

        return parent::removeSignature($signature);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignelectricien(): ?\App\Entity\Signature
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignelectricien', []);

        return parent::getSignelectricien();
    }

    /**
     * {@inheritDoc}
     */
    public function getSigncontroleur(): ?\App\Entity\Signature
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSigncontroleur', []);

        return parent::getSigncontroleur();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeImmutable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeImmutable $created_at): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeImmutable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTimeImmutable $updated_at): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updated_at]);

        return parent::setUpdatedAt($updated_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedby(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedby', []);

        return parent::getCreatedby();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedby(string $created_by): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedby', [$created_by]);

        return parent::setCreatedby($created_by);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy(string $updated_by): \App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$updated_by]);

        return parent::setUpdatedBy($updated_by);
    }

}
