<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Dossier extends \App\Entity\Dossier implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'num', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'dateCreation', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'dateAffecte', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'dateCloture', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'affecte', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'visite', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'rapport', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'attestation', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'cloture', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'conforme', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'demande', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'visites', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'respoFrontOffice', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'controleur', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'referent', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'created_at', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'created_by', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'updated_at', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'updated_by'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'num', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'dateCreation', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'dateAffecte', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'dateCloture', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'affecte', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'visite', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'rapport', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'attestation', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'cloture', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'conforme', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'demande', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'visites', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'respoFrontOffice', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'controleur', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'referent', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'created_at', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'created_by', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'updated_at', '' . "\0" . 'App\\Entity\\Dossier' . "\0" . 'updated_by'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Dossier $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNum(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNum', []);

        return parent::getNum();
    }

    /**
     * {@inheritDoc}
     */
    public function setNum(string $num): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNum', [$num]);

        return parent::setNum($num);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreation(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreation', []);

        return parent::getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreation(\DateTimeInterface $dateCreation): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreation', [$dateCreation]);

        return parent::setDateCreation($dateCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCloture(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCloture', []);

        return parent::getDateCloture();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCloture(\DateTimeInterface $dateCloture): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCloture', [$dateCloture]);

        return parent::setDateCloture($dateCloture);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAffecte(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAffecte', []);

        return parent::getDateAffecte();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAffecte(?\DateTimeInterface $dateAffecte): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAffecte', [$dateAffecte]);

        return parent::setDateAffecte($dateAffecte);
    }

    /**
     * {@inheritDoc}
     */
    public function getAffecte(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAffecte', []);

        return parent::getAffecte();
    }

    /**
     * {@inheritDoc}
     */
    public function setAffecte(bool $affecte): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAffecte', [$affecte]);

        return parent::setAffecte($affecte);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisite(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisite', []);

        return parent::getVisite();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisite(bool $visite): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisite', [$visite]);

        return parent::setVisite($visite);
    }

    /**
     * {@inheritDoc}
     */
    public function getRapport(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRapport', []);

        return parent::getRapport();
    }

    /**
     * {@inheritDoc}
     */
    public function setRapport(bool $rapport): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRapport', [$rapport]);

        return parent::setRapport($rapport);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttestation(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttestation', []);

        return parent::getAttestation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttestation(bool $attestation): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttestation', [$attestation]);

        return parent::setAttestation($attestation);
    }

    /**
     * {@inheritDoc}
     */
    public function getCloture(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCloture', []);

        return parent::getCloture();
    }

    /**
     * {@inheritDoc}
     */
    public function setCloture(bool $cloture): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCloture', [$cloture]);

        return parent::setCloture($cloture);
    }

    /**
     * {@inheritDoc}
     */
    public function getConforme(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConforme', []);

        return parent::getConforme();
    }

    /**
     * {@inheritDoc}
     */
    public function setConforme(bool $conforme): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConforme', [$conforme]);

        return parent::setConforme($conforme);
    }

    /**
     * {@inheritDoc}
     */
    public function getDemande(): ?\App\Entity\Demande
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDemande', []);

        return parent::getDemande();
    }

    /**
     * {@inheritDoc}
     */
    public function setDemande(\App\Entity\Demande $demande): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDemande', [$demande]);

        return parent::setDemande($demande);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisites(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisites', []);

        return parent::getVisites();
    }

    /**
     * {@inheritDoc}
     */
    public function addVisite(\App\Entity\Visite $visite): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVisite', [$visite]);

        return parent::addVisite($visite);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVisite(\App\Entity\Visite $visite): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVisite', [$visite]);

        return parent::removeVisite($visite);
    }

    /**
     * {@inheritDoc}
     */
    public function getRespoFrontOffice(): ?\App\Entity\Agent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRespoFrontOffice', []);

        return parent::getRespoFrontOffice();
    }

    /**
     * {@inheritDoc}
     */
    public function setRespoFrontOffice(?\App\Entity\Agent $respoFrontOffice): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRespoFrontOffice', [$respoFrontOffice]);

        return parent::setRespoFrontOffice($respoFrontOffice);
    }

    /**
     * {@inheritDoc}
     */
    public function getControleur(): ?\App\Entity\Agent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControleur', []);

        return parent::getControleur();
    }

    /**
     * {@inheritDoc}
     */
    public function setControleur(?\App\Entity\Agent $controleur): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setControleur', [$controleur]);

        return parent::setControleur($controleur);
    }

    /**
     * {@inheritDoc}
     */
    public function getReferent(): ?\App\Entity\Agent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferent', []);

        return parent::getReferent();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferent(?\App\Entity\Agent $referent): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferent', [$referent]);

        return parent::setReferent($referent);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisiteCourante(): ?\App\Entity\Visite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisiteCourante', []);

        return parent::getVisiteCourante();
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeImmutable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeImmutable $created_at): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeImmutable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTimeImmutable $updated_at): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updated_at]);

        return parent::setUpdatedAt($updated_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedby(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedby', []);

        return parent::getCreatedby();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedby(string $created_by): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedby', [$created_by]);

        return parent::setCreatedby($created_by);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy(string $updated_by): \App\Entity\Dossier
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$updated_by]);

        return parent::setUpdatedBy($updated_by);
    }

}
